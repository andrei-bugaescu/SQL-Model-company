Query 1 - Sales

The number of products sold by category and by month, with comparison and rate of change compared to the same month of the previous year.
# no filter on the last 3 months on SQL but on table if you want to view a particular month

SELECT 
	p.productLine as category, 
	month(o.orderDate) as month, 
  SUM(CASE WHEN YEAR(o.orderDate) = year(current_date) THEN quantityOrdered ELSE 0 END) AS products_sold_current_year,
  SUM(CASE WHEN YEAR(o.orderDate) = year(current_date)-1 THEN quantityOrdered ELSE 0 END) AS products_sold_last_year,
  round((SUM(CASE WHEN YEAR(o.orderDate) = year(current_date) THEN quantityOrdered ELSE 0 END)-SUM(CASE WHEN year(o.orderDate) = year(current_date)-1 THEN quantityOrdered ELSE 0 END))/SUM(CASE WHEN year(o.orderDate) = year(current_date)-1 THEN quantityOrdered ELSE 0 END) * 100, 2) AS change_rate
FROM orders o
JOIN orderdetails od ON o.orderNumber = od.orderNumber
JOIN products p ON od.productCode = p.productCode
WHERE year(o.orderDate) = 2021 or year(o.orderDate) = 2020
group by category, month
order by category, month



----------------------------------------------------------------------------------------------------------------------------------------------
# Quest 2 - finance

# The turnover of the orders of the last two months by country (selon pays filiale entreprise). 
# turnover request current month + 2 previous months per month and per country
# we kept the months because we noted that there was no turnover for certain countries in certain months (country opening?)

# be careful to specify that if we stay like this, the 3 USA offices are aggregated for a country turnover (limit to be indicated?)
# attention put in order of descending turnover but how to manage the fact of having different months? perhaps in general no differentiation
# months, to keep for detailed indicators?
# the last 2 months completed or the last 2 months from the date of refresh?

SELECT oc.country, MONTH(o.orderDate), SUM(od.quantityOrdered*od.priceEach) as turnover
FROM orderdetails od
JOIN orders AS o
	ON o.orderNumber = od.orderNumber
JOIN customers c
	ON c.customerNumber = o.customerNumber 
JOIN employees e
	ON e.employeeNumber = c.salesRepEmployeeNumber
JOIN offices oc
	ON oc.officeCode = e.officeCode
WHERE 
	CASE
		WHEN MONTH(CURRENT_DATE) = 1 THEN (MONTH(o.orderDate) = MONTH(current_date) AND YEAR(o.orderDate) = YEAR(current_date)) OR (MONTH(o.orderDate) = MONTH(current_date)-1 AND YEAR(o.orderDate) = YEAR(current_date)-1) OR (MONTH(o.orderDate) = MONTH(current_date)-2 AND YEAR(o.orderDate) = YEAR(current_date)-1)
		WHEN MONTH(CURRENT_DATE) = 2 THEN (MONTH(o.orderDate) = MONTH(current_date) AND YEAR(o.orderDate) = YEAR(current_date)) OR (MONTH(o.orderDate) = MONTH(current_date)-1 AND YEAR(o.orderDate) = YEAR(current_date)) OR (MONTH(o.orderDate) = MONTH(current_date)-2 AND YEAR(o.orderDate) = YEAR(current_date)-1)
    ELSE (MONTH(o.orderDate) = MONTH(current_date)-1 AND YEAR(o.orderDate) = YEAR(current_date)) OR (MONTH(o.orderDate) = MONTH(current_date)-2 AND YEAR(o.orderDate) = YEAR(current_date))
	END
GROUP BY oc.country, MONTH(o.orderDate)
ORDER BY turnover DESC



--------------------------------------------------------------------------------------------------------------------------------------

# Quest 3 - finance

# select the amount of orders sent
# 2 select clauses in FROM to retrieve the verified information of the amount of orders and the amount of payments because join impossible
# Limit 1: impossible to filter on the date of dispatch or other order data for the payment part
# we have therefore taken all orders in "shipped" or "resolved" status and deducted all payments received as of today
# if payment before sending, even partial, the calculation is distorted + no account is taken of customer due dates if necessary
# limit 2: what does "on hold" mean? is it pending sending or pending dispute resolution (exists "resolved")
# here we have considered it to mean pending dispute resolution
# limit 3: not enough status for orders, eg: "in preparation", "to be shipped"
# limit 4: impossible to filter the payments based on an info from the orders table (therefore orderDate or shippedDate) therefore

SELECT total_orders_shipped - payments AS orders_shipped_not_paid
FROM 
	(SELECT SUM(od.quantityOrdered * od.priceEach) AS total_orders_shipped
	FROM customers c
	JOIN orders o ON c.customerNumber = o.customerNumber
	JOIN orderdetails od ON o.orderNumber = od.orderNumber
  WHERE status = "Shipped" or status = "Resolved" or status = "On hold") AS total_orders,
  (SELECT SUM(p.amount) AS payments
	FROM payments p) AS payments_received
  
  
  
----------------------------------------------------------------------------------------------------------------------------------
  
#Quest 4 - logistics


# 5 most ordered products in the current month and the 2 previous months
# change ORDER BY for ordered by quantity ordered

# why release a global indicator when only 7 countries, some of which are very distant? by country ? by subsidiary?

SELECT p.productName, p.productCode, p.quantityInStock, SUM(quantityOrdered) AS quantity_ordered_in_current_quarter
FROM products p
JOIN orderdetails od
	ON od.productCode = p.productCode
JOIN orders o
	ON o.orderNumber = od.orderNumber
WHERE 
	CASE
		WHEN MONTH(CURRENT_DATE) = 1 THEN (MONTH(o.orderDate) = MONTH(current_date) AND YEAR(o.orderDate) = YEAR(current_date)) OR (MONTH(o.orderDate) = MONTH(current_date)-1 AND YEAR(o.orderDate) = YEAR(current_date)-1) OR (MONTH(o.orderDate) = MONTH(current_date)-2 AND YEAR(o.orderDate) = YEAR(current_date)-1)
		WHEN MONTH(CURRENT_DATE) = 2 THEN (MONTH(o.orderDate) = MONTH(current_date) AND YEAR(o.orderDate) = YEAR(current_date)) OR (MONTH(o.orderDate) = MONTH(current_date)-1 AND YEAR(o.orderDate) = YEAR(current_date)) OR (MONTH(o.orderDate) = MONTH(current_date)-2 AND YEAR(o.orderDate) = YEAR(current_date)-1)
    ELSE (MONTH(o.orderDate) = MONTH(current_date)-1 AND YEAR(o.orderDate) = YEAR(current_date)) OR (MONTH(o.orderDate) = MONTH(current_date)-2 AND YEAR(o.orderDate) = YEAR(current_date))
	END
GROUP BY productName, p.productCode, quantityInStock
ORDER BY quantity_ordered_in_current_quarter DESC 
Limit 5;


--------------------------------------------------------------------------------------------------------------------------------------

# Quest 5

# Each month, the 2 sellers with the highest turnover.
# Period : month ended before the current date

SELECT e.employeeNumber,
	CONCAT(e.lastName, ' ', e.firstName) AS name, 
  SUM(od.quantityOrdered * od.priceEach) AS turnover
FROM employees e
JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber
JOIN orders o ON c.customerNumber = o.customerNumber
JOIN orderdetails od ON o.orderNumber = od.orderNumber
WHERE o.status != 'Cancelled' AND
	CASE
		WHEN MONTH(CURRENT_DATE) = 1 THEN MONTH(orderDate) = MONTH(current_date)-1 AND YEAR(orderDate) = YEAR(current_date)-1
		ELSE MONTH(orderDate) = MONTH(current_date)-1 AND YEAR(orderDate) = YEAR(current_date)
	END
GROUP BY c.salesRepEmployeeNumber
ORDER BY turnover DESC
Limit 2 
